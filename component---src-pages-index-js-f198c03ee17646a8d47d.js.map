{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","_this$props","this","props","data","language","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layouts_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_Bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","id","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","_components_ReadTime__WEBPACK_IMPORTED_MODULE_7__","minutes","timeToRead","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"mOASMA,4FACJC,OAAA,WAAS,IAAAC,EAIHC,KAAKC,MAFPC,EAFKH,EAELG,KACeC,EAHVJ,EAGLK,YAAeD,SAEXE,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,SAAUhB,KAAKC,MAAMe,SACrBR,MAAOH,EACPF,SAAUA,GAEVS,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACET,MAAM,YACNU,SAAU,yCAEZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,MACCV,EAAMW,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNd,EAAQc,EAAKC,YAAYf,OAASc,EAAKE,OAAOC,KACpD,OACEb,EAAAC,EAAAC,cAAA,OAAKY,IAAKJ,EAAKK,IACbf,EAAAC,EAAAC,cAAA,MACEc,MAAO,CACLC,aAAcC,YAAO,OAGvBlB,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMH,MAAO,CAAEI,UAAS,QAAYC,GAAIX,EAAKE,OAAOC,MACjDjB,IAGLI,EAAAC,EAAAC,cAAA,aACGQ,EAAKC,YAAYW,KADpB,MAC4BtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAUC,QAASd,EAAKe,cAEpDzB,EAAAC,EAAAC,cAAA,KAAGwB,wBAAyB,CAAEC,OAAQjB,EAAKkB,mBApCjCC,IAAMC,WA6Cf7C,YAER,IAAM8C,EAAS","file":"component---src-pages-index-js-f198c03ee17646a8d47d.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../layouts/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\nimport { ReadTime } from '../components/ReadTime'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const {\n      data,\n      pageContext: { language },\n    } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={siteTitle}\n        language={language}\n      >\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.id}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date} â€¢ <ReadTime minutes={node.timeToRead} />\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($language: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { language: { eq: $language } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}